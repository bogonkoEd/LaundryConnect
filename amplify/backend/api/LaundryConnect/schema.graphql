enum OrderStatus {
  NEW
  PROCESSING
  READY_FOR_PICKUP
  PICKED_UP
  COMPLETE
}

type OrderDish @model @auth(rules: [{allow: public}]) {
  id: ID!
  quantity: Int!
  orderID: ID! @index(name: "byOrder")
  ServiceItem: ServiceItem @hasOne
}

type Order @model @auth(rules: [{allow: public}]) {
  id: ID!
  userID: ID! @index(name: "byUser")
  Laundromat: Laundromat @hasOne
  subtotal: Float
  status: OrderStatus!
  OrderDishes: [OrderDish] @hasMany(indexName: "byOrder", fields: ["id"])
}

type BasketService @model @auth(rules: [{allow: public}]) {
  id: ID!
  quantity: Int
  ServiceItem: ServiceItem @hasOne
  basketID: ID! @index(name: "byBasket")
}

type Basket @model @auth(rules: [{allow: public}]) {
  id: ID!
  BasketServices: [BasketService] @hasMany(indexName: "byBasket", fields: ["id"])
  userID: ID! @index(name: "byUser")
  laundromatID: ID! @index(name: "byLaundromat")
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  address: String
  lat: Float!
  lng: Float!
  Orders: [Order] @hasMany(indexName: "byUser", fields: ["id"])
  Baskets: [Basket] @hasMany(indexName: "byUser", fields: ["id"])
  sub: String
}

type ServiceItem @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  description: String
  image_url: String
  price: Float!
  laundromatID: ID! @index(name: "byLaundromat")
}

type Laundromat @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  address: String!
  deliveryFee: Float!
  minDeliveryTime: Int
  maxDeliveryTime: Int
  rating: Float
  lat: Float
  lng: Float
  image_url: String!
  Services: [ServiceItem] @hasMany(indexName: "byLaundromat", fields: ["id"])
  Baskets: [Basket] @hasMany(indexName: "byLaundromat", fields: ["id"])
}
 